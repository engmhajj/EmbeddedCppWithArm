template<typename U>
class Test
{
  
  public: 
  template<class T>
  inline void func()
  {
    T t;
    t.g();
  }
};

/* First instantiated from: CXXDependentScopeMemberExprTest.cpp:20 */
#ifdef INSIGHTS_USE_TEMPLATE
template<>
class Test<int>
{
  
  public: 
  template<class T>
  inline void func();
  
  /* First instantiated from: CXXDependentScopeMemberExprTest.cpp:22 */
  #ifdef INSIGHTS_USE_TEMPLATE
  template<>
  inline void func<S>()
  {
    S t;
    t.g();
  }
  #endif
  
  // inline constexpr Test() noexcept = default;
};

#endif

struct S
{
  void g();
  
  // inline constexpr S() noexcept = default;
};


int main()
{
  Test<int> t;
  t.func<S>();
  return 0;
}
