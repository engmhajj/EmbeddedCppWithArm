/*************************************************************************************
 * NOTE: This an educational hand-rolled transformation. Things can be incorrect or  *
 * buggy.                                                                            *
 *************************************************************************************/
void __cxa_start(void);
void __cxa_atexit(void);

int * Fun(int * v)
{
  return v;
}

typedef struct A
{
  int * r;
} A;

inline A * Constructor_A(A * __this, int * _r)
{
  __this->r = _r;
  return __this;
}


int __main(void)
{
  int i = 4;
  ++i;
  ++i;
  int * f = Fun(&i);
  i = i + 2;
  Fun(&i);
  A a;
  Constructor_A((A *)&a, &i);
  return 0;
  /* a // lifetime ends here */
  /* f // lifetime ends here */
  /* i // lifetime ends here */
}

int main(void)
{
  __cxa_start();
  int ret = __main();
  __cxa_atexit();
  return ret;
  /* ret // lifetime ends here */
}

void __cxa_start(void)
{
}

void __cxa_atexit(void)
{
}

