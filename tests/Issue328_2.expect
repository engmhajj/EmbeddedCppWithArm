template<typename T>
constexpr const bool is_v = false;

template<>
constexpr const bool is_v<void (int)> = false;

struct out
{
  inline void operator<<(bool)
  {
  }
  
  // inline constexpr out() noexcept = default;
};


static out cout;

int main()
{
  cout.operator<<(is_v<void (int)>);
  return 0;
}
