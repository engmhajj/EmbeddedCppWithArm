#include <new> // for thread-safe static's placement new
#include <stdint.h> // for uint64_t under Linux/GCC

void X() noexcept(true);

class Sing
{
  
  public: 
  inline Sing() noexcept
  {
    X();
  }
  
};


Sing & Test()
{
  static uint64_t __sGuard;
  alignas(Sing) static char __s[sizeof(Sing)];
  
  if((__sGuard & 255) == 0) {
    if(__cxa_guard_acquire(&__sGuard)) {
      new (&__s)Sing();
      __sGuard = true;
      __cxa_guard_release(&__sGuard);
      /* __cxa_atexit(Sing::~Sing, &__s, &__dso_handle); */
    } 
    
  } 
  
  return *reinterpret_cast<Sing*>(__s);
}
