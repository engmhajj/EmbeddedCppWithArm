template<bool B>
struct bool_constant
{
  static const bool value = B;
};


template<typename ... A>
struct F
{
  template<typename ... B>
  using SameSize = bool_constant<sizeof...(A) == sizeof...(B)>;
  template<typename ... B, typename type_parameter_1_1 = SameSize<B...>>
  inline F(B...)
  {
  }
  
};

/* First instantiated from: TypeAliasTemplateTest.cpp:19 */
#ifdef INSIGHTS_USE_TEMPLATE
template<>
struct F<int>
{
  template<typename ... B>
  using SameSize = bool_constant<1 == sizeof...(B)>;
  template<typename ... B, typename type_parameter_0_1 = SameSize<B...>>
  inline F(B...);
  
  
  /* First instantiated from: TypeAliasTemplateTest.cpp:19 */
  #ifdef INSIGHTS_USE_TEMPLATE
  template<>
  inline F<int, bool_constant<true> >(int __0)
  {
  }
  #endif
  
  
};

#endif

int main()
{
  F<int> f1 = F<int>(3);
  return 0;
}
