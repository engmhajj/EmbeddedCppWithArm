#include <memory>

class C
{
  
  public: 
  inline C() /* noexcept */ = delete;
  
  private: 
  const int i;
};


class D
{
  
  public: 
  inline constexpr D() /* noexcept */ = default;
  
  private: 
  std::unique_ptr<int, std::default_delete<int> > p;
  public: 
  // inline constexpr D(const D &) /* noexcept */ = delete;
  // inline D & operator=(const D &) /* noexcept */ = delete;
};

