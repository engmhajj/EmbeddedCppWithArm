struct S
{
  void f();
  
};

struct T
{
};


template<typename T>
decltype(T{}.f()) f(T, int)
{
}

/* First instantiated from: AutoHandler3Test.cpp:15 */
#ifdef INSIGHTS_USE_TEMPLATE
template<>
void f<S>(S, int)
{
}
#endif


template<typename T>
void f(T, ...)
{
}

#ifdef INSIGHTS_USE_TEMPLATE
template<>
void f<S>(S, ...);
#endif


/* First instantiated from: AutoHandler3Test.cpp:16 */
#ifdef INSIGHTS_USE_TEMPLATE
template<>
void f<T>(T, ...)
{
}
#endif


int main()
{
  f(S{}, 0);
  f(T{}, 0);
  return 0;
}
