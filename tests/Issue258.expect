#include <iostream>
#include <memory>

int main()
{
  std::unique_ptr<int, std::default_delete<int> > x = std::make_unique<int>(42);
    
  class __lambda_7_19
  {
    public: 
    inline /*constexpr */ void operator()() const
    {
      std::operator<<(std::cout.operator<<(x.operator*()), '\n');
    }
    
    private: 
    std::unique_ptr<int, std::default_delete<int> > x;
    public: 
    // inline /*constexpr */ __lambda_7_19(const __lambda_7_19 &) /* noexcept */ = delete;
    // inline __lambda_7_19 & operator=(const __lambda_7_19 &) /* noexcept */ = delete;
    // inline ~__lambda_7_19() noexcept = default;
    __lambda_7_19(std::unique_ptr<int, std::default_delete<int> > && _x)
    : x{std::move(_x)}
    {}
    
  };
  
  __lambda_7_19 lambda = __lambda_7_19{std::unique_ptr<int, std::default_delete<int> >(std::move(x))};
  return 0;
}
