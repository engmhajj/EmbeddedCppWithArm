#include <chrono>

template<typename T>
void Test()
{
  using simple = std::chrono::duration<double, std::ratio<60, 1> >;
  using withCalculation = std::chrono::duration<double, std::ratio<31536000, 1> >;
}

/* First instantiated from: ImplicitCast4Test.cpp:15 */
#ifdef INSIGHTS_USE_TEMPLATE
template<>
void Test<int>()
{
  using simple = std::chrono::duration<double, std::ratio<60, 1> >;
  using withCalculation = std::chrono::duration<double, std::ratio<31536000, 1> >;
}
#endif


int main()
{
  using simple = std::chrono::duration<double, std::ratio<60, 1> >;
  using withCalculation = std::chrono::duration<double, std::ratio<31536000, 1> >;
  Test<int>();
  return 0;
}
